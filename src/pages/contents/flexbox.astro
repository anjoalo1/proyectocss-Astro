---
import Articlep from "../../components/Articlep.astro";
import Layout from "../../layouts/Layout.astro";
import Code from "../../components/Code.astro";
import Addimagen from "../../components/Addimagen.astro";
import ImagenAncha from "../../components/ImagenAncha.astro";

const cssLang = "language-css line-numbers";
const htmlLang = "language-html line-numbers";


const codigos ={
    codigo1:`
    <!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Flex Container</title>
  <style>
    .flex-container {
      display: flex;
      /* Otras propiedades de Flexbox se pueden aplicar aquí */
    }

    /* Estilos adicionales solo para ejemplificar */
    .flex-item {
      margin: 10px;
      padding: 20px;
      border: 1px solid #ccc;
    }
  </style>
</head>
<body>
  <div class="flex-container">
    <div class="flex-item">Elemento 1</div>
    <div class="flex-item">Elemento 2</div>
    <div class="flex-item">Elemento 3</div>
  </div>
</body>
</html>

    `,
    codigo2:`
    .flex-container {
  flex-direction: row;
}
    `,
    codigo3:`
    <!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>
<body>

<div class="flex-container">
  <div class="flex-item"></div>
  <div class="flex-item"></div>
  <div class="flex-item"></div>
  <div class="flex-item"></div>
  <div class="flex-item"></div>
  <div class="flex-item"></div>
</div>

</body>
</html>
    `,
    codigo4:`
    .flex-container {
      display: flex;
      flex-wrap: wrap;
       /* Puedes cambiar este valor para ver cómo afecta la disposición */
      border: 1px solid #ccc;
    }

    .flex-item {
      width: 100px;
      height: 100px;
      background-color: lightblue;
      margin: 5px;
    }
    `,
    codigo5:``,
    codigo6:``,
    codigo7:``,
    codigo8:``,
    codigo9:``,
    codigo10:``
}
---

<Layout title="flex-box">
    <h1 class="title-h1">FLEX-BOX</h1>
    <Articlep>
        <h2 class="title-h2"></h2>
        <p class="parrafo"></p>
        <p class="parrafo"></p>
        <!--Code codigo={grid.codigo1} typeLan={cssLang}></Code>

            <Code codigo={grid.codigo2} typeLan={htmlLang}></Code>-->
    </Articlep>

    <Articlep>
        <h2 class="title-h2">¿Qué es flex-box?</h2>
        <p class="parrafo">Flexbox, o Flexible Box Layout, es un modelo de diseño en CSS que proporciona una manera eficiente de diseñar y organizar elementos dentro de un contenedor, incluso cuando el tamaño de los elementos es desconocido o dinámico. Con Flexbox, puedes crear diseños más complejos y flexibles con menos código que los modelos de diseño tradicionales basados en bloques y líneas.</p>
        <p class="parrafo">En lugar de depender de la maquetación tradicional basada en cajas y flujos, Flexbox permite que los elementos hijos de un contenedor se distribuyan automáticamente de manera óptima según las propiedades definidas. </p>
        <p class="parrafo"></p>
    </Articlep>


    <Articlep>
        <h2 class="title-h2">flex-container</h2>
        <p class="parrafo">En Flexbox, el elemento al que se aplica la propiedad display: flex; o display: inline-flex; se llama el "flex container" o, en español, "contenedor flexible". Este contenedor se convierte en un contenedor de diseño flexible y afecta al diseño y alineación de sus elementos hijos.</p>
        <p class="parrafo">Cuando se define un elemento como un flex container, sus hijos directos se convierten automáticamente en "flex items" o "elementos flexibles". El contenedor flexible establece el contexto para los elementos internos y controla cómo se distribuyen y alinean estos elementos dentro del contenedor.</p>
        <p class="parrafo">Por ejemplo, el siguiente código HTML y CSS crea un contenedor flexible:</p>
        <p class="parrafo"></p>
        
        
        <Code codigo={codigos.codigo1} typeLan={htmlLang}></Code>
        <p class="parrafo">En este ejemplo, el div &lt;class="flex-container"&gt; es el contenedor flexible, y los &lt;div&gt; dentro de él con la clase "flex-item" son los elementos flexibles. El contenedor flexible determina cómo se distribuyen y alinean los elementos hijos según las propiedades de Flexbox que se apliquen a él.</p>
    </Articlep>
    
    
    <Articlep>
        <h2 class="title-h2">flex-direction</h2>
        <p class="parrafo">La propiedad flex-direction en Flexbox define la dirección principal en la que los elementos hijos de un contenedor flexible se colocan. Esta propiedad controla si los elementos se colocan en una fila (row), en una columna (column), en una fila inversa (row-reverse), o en una columna inversa (column-reverse).</p>

        <p class="parrafo">sintaxix</p>
        <Code codigo={codigos.codigo2} typeLan={cssLang}></Code>

        <p class="parrafo">Aquí están los valores posibles de la propiedad flex-direction:</p>
        <p class="parrafo">row (por defecto): Los elementos se colocan en una fila de izquierda a derecha.</p>
        <Code codigo={codigos.codigo2} typeLan={cssLang}></Code>
        <p class="parrafo">row-reverse: Los elementos se colocan en una fila de derecha a izquierda.</p>
        <p class="parrafo">column: Los elementos se colocan en una columna de arriba hacia abajo.</p>
        <p class="parrafo">column-reverse: Los elementos se colocan en una columna de abajo hacia arriba.</p>
        <p class="parrafo"></p>
        
        <Addimagen direccion="../../assets/flex_box/flex_direction.svg"></Addimagen>
        <!--Code codigo={grid.codigo1} typeLan={cssLang}></Code>
          
          <Code codigo={grid.codigo2} typeLan={htmlLang}></Code>-->
        </Articlep>
        
        <Articlep>
          <h2 class="title-h2">flex-wrap</h2>
          <p class="parrafo">La propiedad flex-wrap es una propiedad de CSS que se utiliza en el modelo de diseño flexible (Flexbox) para controlar si los elementos flexibles (flex items) deben envolverse en múltiples líneas o no. Esta propiedad especifica si el contenedor flexible debe permitir que los elementos flexibles se dispongan en una sola línea o en varias líneas.</p>
          <ul class="parrafo">
            <li><strong>nowrap:</strong> Los elementos flexibles se disponen en una sola línea, lo que significa que no se permitirá que se envuelvan en varias líneas.</li>
            <li><strong>wrap:</strong> Los elementos flexibles se disponen en varias líneas según sea necesario.</li>
            <li><strong>wrap-reverse:</strong> Los elementos flexibles se disponen en varias líneas, pero en dirección opuesta.</li>
          </ul>
          <Code codigo={codigos.codigo3} typeLan={htmlLang}></Code>
          <Code codigo={codigos.codigo4} typeLan={cssLang}></Code>
          <p class="parrafo">En este ejemplo, el contenedor .flex-container tiene la propiedad flex-wrap establecida en wrap, lo que permite que los elementos flexibles se envuelvan en varias líneas si el espacio es insuficiente en una sola línea. Puedes cambiar el valor de flex-wrap a nowrap o wrap-reverse para ver cómo afecta la disposición de los elementos flexibles.</p>
          <Addimagen direccion="../../assets/flex_box/flex_wrap.svg"></Addimagen>
          <p class="parrafo"></p>
          <p class="parrafo"></p>
          <!--Code codigo={grid.codigo1} typeLan={cssLang}></Code>
            
            <Code codigo={grid.codigo2} typeLan={htmlLang}></Code>-->
          </Articlep>
          <Articlep>
            <h2 class="title-h2">f</h2>
      <p class="parrafo"></p>
      <p class="parrafo"></p>
      <!--Code codigo={grid.codigo1} typeLan={cssLang}></Code>
        
          <Code codigo={grid.codigo2} typeLan={htmlLang}></Code>-->
  </Articlep>

</Layout>

